{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import'./OpenAIComponent.css';// Import your CSS file\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const OpenAIComponent=()=>{const[userInput,setUserInput]=useState('');const[response,setResponse]=useState('');const[jsonData,setJsonData]=useState('');const[isEditing,setIsEditing]=useState(false);// Function to handle OpenAI API call\nconst handleSubmit=async e=>{e.preventDefault();try{const result=await axios.post('https://api.openai.com/v1/chat/completions',{model:\"gpt-4\",messages:[{role:\"user\",content:userInput}]},{headers:{'Authorization':`Bearer ${process.env.REACT_APP_OPENAI_API_KEY}`,'Content-Type':'application/json'}});setResponse(result.data.choices[0].message.content);}catch(error){console.error(\"Error fetching data from OpenAI:\",error);setResponse(\"Error fetching response\");}};// Function to fetch JSON file from the local server\nconst handleGenerateRequirements=async()=>{try{// Fetch the JSON file from your local Express server\nconst response=await fetch('http://localhost:8080/json/soccer.json');// Ensure Express is running\nconst data=await response.json();setJsonData(JSON.stringify(data,null,2));// Format JSON for readability\nsetIsEditing(false);// Set editing mode off initially\n}catch(error){console.error(\"Error fetching JSON file:\",error);setJsonData(\"Error fetching JSON data\");}};// Toggle editing mode for JSON data\nconst handleEditToggle=()=>{setIsEditing(!isEditing);};// Handle JSON data changes in textarea\nconst handleJsonChange=e=>{setJsonData(e.target.value);};return/*#__PURE__*/_jsxs(\"div\",{className:\"openai-container\",children:[/*#__PURE__*/_jsxs(\"form\",{className:\"openai-form\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{className:\"openai-input\",type:\"text\",value:userInput,onChange:e=>setUserInput(e.target.value),placeholder:\"Ask me anything...\"}),/*#__PURE__*/_jsx(\"button\",{className:\"openai-button\",type:\"submit\",children:\"Send\"})]}),/*#__PURE__*/_jsx(\"button\",{className:\"openai-button generate\",onClick:handleGenerateRequirements,children:\"Generate Requirements\"}),/*#__PURE__*/_jsx(\"button\",{className:\"openai-button\",onClick:handleEditToggle,children:isEditing?'Save Changes':'Edit JSON'}),/*#__PURE__*/_jsxs(\"div\",{className:\"openai-response\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Response:\"}),/*#__PURE__*/_jsx(\"pre\",{children:response})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"json-display\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"JSON Data:\"}),isEditing?/*#__PURE__*/_jsx(\"textarea\",{value:jsonData,onChange:handleJsonChange,rows:\"10\",cols:\"50\"}):/*#__PURE__*/_jsx(\"pre\",{style:{color:'black'},children:jsonData})// Display JSON in preformatted style\n]})]});};export default OpenAIComponent;","map":{"version":3,"names":["React","useState","axios","jsx","_jsx","jsxs","_jsxs","OpenAIComponent","userInput","setUserInput","response","setResponse","jsonData","setJsonData","isEditing","setIsEditing","handleSubmit","e","preventDefault","result","post","model","messages","role","content","headers","process","env","REACT_APP_OPENAI_API_KEY","data","choices","message","error","console","handleGenerateRequirements","fetch","json","JSON","stringify","handleEditToggle","handleJsonChange","target","value","className","children","onSubmit","type","onChange","placeholder","onClick","rows","cols","style","color"],"sources":["/Users/dheerajmendu/Desktop/kp/app-generator/src/OpenAIComponent.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './OpenAIComponent.css'; // Import your CSS file\n\nconst OpenAIComponent = () => {\n  const [userInput, setUserInput] = useState('');\n  const [response, setResponse] = useState('');\n  const [jsonData, setJsonData] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n\n  // Function to handle OpenAI API call\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const result = await axios.post(\n        'https://api.openai.com/v1/chat/completions',\n        {\n          model: \"gpt-4\",\n          messages: [{ role: \"user\", content: userInput }],\n        },\n        {\n          headers: {\n            'Authorization': `Bearer ${process.env.REACT_APP_OPENAI_API_KEY}`,\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n      setResponse(result.data.choices[0].message.content);\n    } catch (error) {\n      console.error(\"Error fetching data from OpenAI:\", error);\n      setResponse(\"Error fetching response\");\n    }\n  };\n\n  // Function to fetch JSON file from the local server\n  const handleGenerateRequirements = async () => {\n    try {\n      // Fetch the JSON file from your local Express server\n      const response = await fetch('http://localhost:8080/json/soccer.json'); // Ensure Express is running\n      const data = await response.json();\n      setJsonData(JSON.stringify(data, null, 2)); // Format JSON for readability\n      setIsEditing(false); // Set editing mode off initially\n    } catch (error) {\n      console.error(\"Error fetching JSON file:\", error);\n      setJsonData(\"Error fetching JSON data\");\n    }\n  };\n\n  // Toggle editing mode for JSON data\n  const handleEditToggle = () => {\n    setIsEditing(!isEditing);\n  };\n\n  // Handle JSON data changes in textarea\n  const handleJsonChange = (e) => {\n    setJsonData(e.target.value);\n  };\n\n  return (\n    <div className=\"openai-container\">\n      <form className=\"openai-form\" onSubmit={handleSubmit}>\n        <input\n          className=\"openai-input\"\n          type=\"text\"\n          value={userInput}\n          onChange={(e) => setUserInput(e.target.value)}\n          placeholder=\"Ask me anything...\"\n        />\n        <button className=\"openai-button\" type=\"submit\">Send</button>\n      </form>\n\n      <button className=\"openai-button generate\" onClick={handleGenerateRequirements}>\n        Generate Requirements\n      </button>\n\n      <button className=\"openai-button\" onClick={handleEditToggle}>\n        {isEditing ? 'Save Changes' : 'Edit JSON'}\n      </button>\n\n      <div className=\"openai-response\">\n        <h3>Response:</h3>\n        <pre>{response}</pre>\n      </div>\n\n      <div className=\"json-display\">\n        <h3>JSON Data:</h3>\n        {isEditing ? (\n          <textarea\n            value={jsonData}\n            onChange={handleJsonChange}\n            rows=\"10\"\n            cols=\"50\"\n          />\n        ) : (\n          <pre style={{ color: 'black' }}>{jsonData}</pre> // Display JSON in preformatted style\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default OpenAIComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}