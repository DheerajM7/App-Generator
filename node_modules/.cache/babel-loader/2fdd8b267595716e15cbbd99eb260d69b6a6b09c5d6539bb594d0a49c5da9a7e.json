{"ast":null,"code":"var _jsxFileName = \"/Users/dheerajmendu/Desktop/kp/app-generator/src/OpenAIComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './OpenAIComponent.css'; // Import your CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OpenAIComponent = () => {\n  _s();\n  const [userInput, setUserInput] = useState('');\n  const [response, setResponse] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const result = await axios.post('https://api.openai.com/v1/chat/completions', {\n        model: \"gpt-4\",\n        messages: [{\n          role: \"user\",\n          content: userInput\n        }]\n      }, {\n        headers: {\n          'Authorization': `Bearer ${process.env.REACT_APP_OPENAI_API_KEY}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      setResponse(result.data.choices[0].message.content);\n    } catch (error) {\n      console.error(\"Error fetching data from OpenAI:\", error);\n      setResponse(\"Error fetching response\");\n    }\n  };\n  const handleGenerateRequirements = async () => {\n    const prompt = `Generate requirements based on the following input: \"${userInput}\"`;\n    try {\n      const result = await axios.post('https://api.openai.com/v1/chat/completions', {\n        model: \"gpt-4\",\n        messages: [{\n          role: \"user\",\n          content: prompt\n        }]\n      }, {\n        headers: {\n          'Authorization': `Bearer ${process.env.REACT_APP_OPENAI_API_KEY}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      setResponse(result.data.choices[0].message.content);\n    } catch (error) {\n      console.error(\"Error fetching data from OpenAI:\", error);\n      setResponse(\"Error fetching response\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"openai-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"openai-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"openai-input\",\n        type: \"text\",\n        value: userInput,\n        onChange: e => setUserInput(e.target.value),\n        placeholder: \"Ask me anything...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"openai-button\",\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"openai-button generate\",\n      onClick: handleGenerateRequirements,\n      children: \"Generate Requirements\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"openai-response\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Response:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(OpenAIComponent, \"+XGRf1Fg15sHYbV4fDl9lOywMu8=\");\n_c = OpenAIComponent;\nexport default OpenAIComponent;\nvar _c;\n$RefreshReg$(_c, \"OpenAIComponent\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","OpenAIComponent","_s","userInput","setUserInput","response","setResponse","handleSubmit","e","preventDefault","result","post","model","messages","role","content","headers","process","env","REACT_APP_OPENAI_API_KEY","data","choices","message","error","console","handleGenerateRequirements","prompt","className","children","onSubmit","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/dheerajmendu/Desktop/kp/app-generator/src/OpenAIComponent.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './OpenAIComponent.css'; // Import your CSS file\n\nconst OpenAIComponent = () => {\n    const [userInput, setUserInput] = useState('');\n    const [response, setResponse] = useState('');\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const result = await axios.post(\n                'https://api.openai.com/v1/chat/completions',\n                {\n                    model: \"gpt-4\",\n                    messages: [{ role: \"user\", content: userInput }],\n                },\n                {\n                    headers: {\n                        'Authorization': `Bearer ${process.env.REACT_APP_OPENAI_API_KEY}`,\n                        'Content-Type': 'application/json',\n                    },\n                }\n            );\n            setResponse(result.data.choices[0].message.content);\n        } catch (error) {\n            console.error(\"Error fetching data from OpenAI:\", error);\n            setResponse(\"Error fetching response\");\n        }\n    };\n\n    const handleGenerateRequirements = async () => {\n        const prompt = `Generate requirements based on the following input: \"${userInput}\"`;\n        try {\n            const result = await axios.post(\n                'https://api.openai.com/v1/chat/completions',\n                {\n                    model: \"gpt-4\",\n                    messages: [{ role: \"user\", content: prompt }],\n                },\n                {\n                    headers: {\n                        'Authorization': `Bearer ${process.env.REACT_APP_OPENAI_API_KEY}`,\n                        'Content-Type': 'application/json',\n                    },\n                }\n            );\n            setResponse(result.data.choices[0].message.content);\n        } catch (error) {\n            console.error(\"Error fetching data from OpenAI:\", error);\n            setResponse(\"Error fetching response\");\n        }\n    };\n\n    return (\n        <div className=\"openai-container\">\n            <form className=\"openai-form\" onSubmit={handleSubmit}>\n                <input\n                    className=\"openai-input\"\n                    type=\"text\"\n                    value={userInput}\n                    onChange={(e) => setUserInput(e.target.value)}\n                    placeholder=\"Ask me anything...\"\n                />\n                <button className=\"openai-button\" type=\"submit\">Send</button>\n            </form>\n            <button className=\"openai-button generate\" onClick={handleGenerateRequirements}>Generate Requirements</button>\n            <div className=\"openai-response\">\n                <h3>Response:</h3>\n                <pre>{response}</pre>\n            </div>\n        </div>\n    );\n};\n\nexport default OpenAIComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}